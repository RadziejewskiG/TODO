plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.radziejewskig.todo"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        javacOptions {
            option("-Xmaxerrs", 1000) // Increase the max count of errors from annotation processor
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:1.3.0"

    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // Needed when targeting API 29+ and using androidx.fragment 1.2.0+ for fragment transitions to work properly
    implementation 'androidx.transition:transition-ktx:1.4.1'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version" // SavedState built into ViewModel
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "com.airbnb.android:lottie:$lottieVersion"

    //  Media management/image loading framework
    implementation ('com.github.bumptech.glide:glide:4.11.0') {
        exclude group: "com.android.support"
    }
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_component_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_component_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Firebase
    implementation 'com.google.firebase:firebase-firestore-ktx:23.0.1'
    implementation 'com.google.firebase:firebase-storage-ktx:20.0.0'

    // Coroutines integration with play services
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"

    //  Image cropping library
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    //  Exif interface for getting image data(rotation etc)
    implementation "androidx.exifinterface:exifinterface:1.3.2"

    testImplementation 'junit:junit:4.+'
    testImplementation "com.google.truth:truth:1.1.3"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
